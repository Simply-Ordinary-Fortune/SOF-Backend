generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bottlemessage {
  id                                  Int      @id @default(autoincrement())
  senderId                            Int
  receiverId                          Int
  message                             String
  sentAt                              DateTime @default(now())
  sourceFile                          String?
  updatedAt                           DateTime @updatedAt
  syncStatus                          String   @default("SUCCESS")
  imageUrl                            String?
  isRead                              Boolean  @default(false)
  user_bottlemessage_receiverIdTouser user     @relation("bottlemessage_receiverIdTouser", fields: [receiverId], references: [id], map: "BottleMessage_receiverId_fkey")
  user_bottlemessage_senderIdTouser   user     @relation("bottlemessage_senderIdTouser", fields: [senderId], references: [id], map: "BottleMessage_senderId_fkey")

  @@index([receiverId], map: "BottleMessage_receiverId_fkey")
  @@index([senderId], map: "BottleMessage_senderId_fkey")
}

model record {
  id         Int      @id @default(autoincrement())
  userId     Int
  content    String
  createdAt  DateTime @default(now())
  sourceFile String?
  updatedAt  DateTime @updatedAt
  syncStatus String   @default("SUCCESS")
  tags       Json?    
  imageUrl   String?
  user       user     @relation(fields: [userId], references: [id], map: "Record_userId_fkey")

  @@index([userId], map: "Record_userId_fkey")
}

model user {
  id                                           Int             @id @default(autoincrement())
  email                                        String?
  password                                     String?
  createdAt                                    DateTime        @default(now())
  sourceFile                                   String?
  updatedAt                                    DateTime        @updatedAt
  syncStatus                                   String          @default("SUCCESS")
  pushEnabled                                  Boolean         @default(true)
  guestId                                      String          @unique
  bottlemessage_bottlemessage_receiverIdTouser bottlemessage[] @relation("bottlemessage_receiverIdTouser")
  bottlemessage_bottlemessage_senderIdTouser   bottlemessage[] @relation("bottlemessage_senderIdTouser")
  record                                       record[]
}
